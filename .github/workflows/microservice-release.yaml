name: Release microservice

on:
    workflow_call:
        secrets:
            sonar-token:
                required: true
                description: Sonarcloud token.
            github-token:
                required: true
                description: Github token
            docker-registry-user:
                required: true
                description: Docker registry user
            docker-registry-password:
                required: true
                description: Docker registry password
            aws-region:
                required: true
                description: AWS region
            aws-secret-access-key:
                required: true
                description: AWS secret access key
            aws-access-key-id:
                required: true
                description: AWS access key id
        inputs:
            project:
                type: string
                required: true
                description: Project name

jobs:
    release:
        name: Release
        runs-on: ubuntu-20.04
        steps:
            - name: Login to Docker registry
              run: echo "${{ secrets.docker-registry-password }}" | docker login rg.fr-par.scw.cloud/indiebackend -u nologin --password-stdin
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
                  persist-credentials: false
            - name: Setup node (Volta)
              uses: volta-cli/action@v3
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
            - uses: actions/cache@v3
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn install
            - name: Run unit tests
              run: yarn ci:test:unit
            - name: Build
              run: yarn build
            - name: Cocogitto
              uses: cocogitto/cocogitto-action@v3
              id: release
              with:
                  release: true
                  check-latest-tag-only: true
            - name: Build and push docker image
              run: |
                  docker build -t rg.fr-par.scw.cloud/indiebackend/${{ inputs.project }}:${{ steps.release.outputs.version }} .
                  docker push rg.fr-par.scw.cloud/indiebackend/${{ inputs.project }}:${{ steps.release.outputs.version }}
            - name: Build and push helm chart
              run: |
                  yq -i '.version = "${{ steps.release.outputs.version }}"' 'helm/Chart.yaml'
                  yq -i '.appVersion = "${{ steps.release.outputs.version }}"' 'helm/Chart.yaml'
                  helm package helm
                  curl --data-binary "@${{ inputs.project }}-${{ steps.release.outputs.version }}.tgz" https://cm.dev.indiebackend.com/api/charts
            - name: Push release commit
              run: |
                  git add helm/Chart.yaml && git commit --amend --no-edit
                  git tag -d ${{ steps.release.outputs.version }}
                  git tag ${{ steps.release.outputs.version }} HEAD
                  git push
                  git push origin ${{ steps.release.outputs.version }}
            - name: Create github release
              uses: softprops/action-gh-release@v1
              with:
                  body_path: CHANGELOG.md
                  tag_name: ${{ steps.release.outputs.version }}
            - name: SonarCloud Scan # This step is at the end in order to not block the workflow if it fails
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.github-token }}
                  SONAR_TOKEN: ${{ secrets.sonar-token }}
