name: Release microservice

on:
    workflow_call:
        secrets:
            sonar-token:
                required: true
                description: Sonarcloud token.
            github-token:
                required: true
                description: Github token
            docker-registry-user:
                required: true
                description: Docker registry user
            docker-registry-password:
                required: true
                description: Docker registry password
            aws-region:
                required: true
                description: AWS region
            aws-secret-access-key:
                required: true
                description: AWS secret access key
            aws-access-key-id:
                required: true
                description: AWS access key id
jobs:
    release:
        name: Release
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
                  persist-credentials: false
            - name: Setup node (Volta)
              uses: volta-cli/action@v3
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
            - uses: actions/cache@v3
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn install
            - name: Run unit tests
              run: yarn ci:test:unit
            - name: Build
              run: yarn build
            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.github-token }}
                  SONAR_TOKEN: ${{ secrets.sonar-token }}
            - name: Setup node 14 to fix Semantic Release (#79)
              uses: actions/setup-node@v3
              with:
                  node-version: 14
            - name: Semantic Release
              uses: cycjimmy/semantic-release-action@v3
              env:
                  GITHUB_TOKEN: ${{ secrets.github-token }}
                  DOCKER_REGISTRY_USER: ${{ secrets.docker-registry-user }}
                  DOCKER_REGISTRY_PASSWORD: ${{ secrets.docker-registry-password }}
                  AWS_REGION: ${{ secrets.aws-region }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.aws-secret-access-key }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.aws-access-key-id }}

              with:
                  extra_plugins: |
                      @semantic-release/commit-analyzer
                      @semantic-release/release-notes-generator
                      @semantic-release/github
                      @semantic-release/git
                      @codedependant/semantic-release-docker
                      @semantic-release/exec
                      semantic-release-helm
